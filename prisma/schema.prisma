// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRESQL_SERVICE_URI")
}

model User {
  id           Int      @id @default(autoincrement())
  userId       String   @unique
  name         String
  email        String   @unique
  createdAt    DateTime
  updatedAt    DateTime
  lastSignedIn DateTime

  images       Image[]  // One-to-Many Relationship
  @@map("users")
}

model Image {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [userId], onDelete: Cascade)
  userId    String
  title     String
  filename  String
  url       String
  format    String
  prompt    String
  isPublic  Boolean  @default(true)
  createdAt DateTime @default(now())

  imageTags ImageTag[]  // Relation to the join table
  @@map("images")
}

model Tag {
  id        Int       @id @default(autoincrement())
  tagName   String    @unique
  createdAt DateTime  @default(now())

  imageTags ImageTag[]  // Relation to the join table
  @@map("tags")
}

model ImageTag {
  imageId   Int
  tagId     Int
  image     Image    @relation(fields: [imageId], references: [id], onDelete: Cascade)
  tag       Tag      @relation(fields: [tagId], references: [id], onDelete: Cascade)

  @@id([imageId, tagId])  // Composite primary key
  @@map("image_tags")
}